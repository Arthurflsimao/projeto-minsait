version: '3.8'

services:
  postgres:
    image: postgres:latest
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      timeout: 20s
      retries: 10
      interval: 10s
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: operations
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net  

  quarkus:
    depends_on:
      postgres:
        condition: service_healthy  
    build:
      context: ./minsait-project  # Caminho atualizado para o backend
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - 8080:8080
    environment:
      - QUARKUS_DATASOURCE_DB_KIND=postgresql
      - QUARKUS_DATASOURCE_USERNAME=user
      - QUARKUS_DATASOURCE_PASSWORD=password
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/operations?createDatabaseIfNotExist=true
      - QUARKUS_HTTP_CORS=true
      - QUARKUS_HTTP_CORS_ORIGINS=http://localhost:4200,http://angular:80,http://localhost:80
      - QUARKUS_HTTP_CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - QUARKUS_HTTP_CORS_HEADERS=accept,authorization,content-type,x-requested-with
      - QUARKUS_HTTP_CORS_EXPOSED_HEADERS=Content-Disposition
      - QUARKUS_HTTP_CORS_ACCESS_CONTROL_MAX_AGE=24H
      - QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS=true
      - QUARKUS_DATASOURCE_JDBC_ACQUISITION_TIMEOUT=30
      - QUARKUS_DATASOURCE_JDBC_INITIAL_SIZE=1
      - QUARKUS_DATASOURCE_JDBC_MIN_SIZE=1
    networks:
      - app-net    

  angular:
    depends_on:
      - quarkus
    build:
      context: ./cadastramento-operacoes  # Caminho atualizado para o frontend
    ports:
      - 4200:80
    networks:
      - app-net  

volumes:
  postgres_data:

networks:
  app-net:
    driver: bridge
